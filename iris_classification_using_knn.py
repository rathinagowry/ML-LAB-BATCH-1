# -*- coding: utf-8 -*-
"""Iris classification using knn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YfFLY0g1Oj1y58PA_AHz8H65ZvmDsoYN
"""

from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score

# Load the Iris dataset
iris = load_iris()
X = iris.data   # features: sepal length, sepal width, petal length, petal width
y = iris.target # labels: 0 = Setosa, 1 = Versicolor, 2 = Virginica

# Split into training and test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create KNN model with k=3
knn = KNeighborsClassifier(n_neighbors=3)

# Train the model
knn.fit(X_train, y_train)

# Predict on test data
y_pred = knn.predict(X_test)

# Accuracy
print("Accuracy on Iris dataset:", accuracy_score(y_test, y_pred))

# Example prediction
sample = [[5.1, 3.5, 1.4, 0.2]]  # sample flower
pred_class = knn.predict(sample)
print("Predicted species:", iris.target_names[pred_class][0])

import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error

# Example dataset: [size(sqft), bedrooms, location_score], price
X = np.array([
    [1400, 3, 7],
    [1600, 3, 8],
    [1700, 4, 9],
    [1875, 3, 7],
    [1100, 2, 6],
    [1550, 4, 8],
    [2350, 4, 10],
    [2450, 5, 9],
    [1425, 3, 7],
    [1700, 3, 8]
])
y = np.array([245000, 312000, 279000, 308000, 199000, 219000, 405000, 324000, 319000, 255000])

# Split into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create KNN regressor with k=5
knn_reg = KNeighborsRegressor(n_neighbors=5)

# Train the model
knn_reg.fit(X_train, y_train)

# Predict on test data
y_pred = knn_reg.predict(X_test)

# Evaluate
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))

# Predict price of a new house
new_house = np.array([[1800, 3, 8]])  # size=1800sqft, 3 bedrooms, location_score=8
pred_price = knn_reg.predict(new_house)
print("Predicted house price:", pred_price[0])